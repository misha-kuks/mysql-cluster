---
# tasks file for wordpress
# - name: Download WordPress
#   get_url: 
#     url: https://ru.wordpress.org/latest-ru_RU.zip
#     dest: /tmp/latest-ru_RU.zip 
# Uncomment this task and download worpress package in files folder    
- name: copy wp archieve
  copy:
    src: wordpress-6.1.1-ru_RU.zip
    dest: /tmp
 

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress-6.1.1-ru_RU.zip
    dest: /tmp
    owner: www-data
    group: www-data
    copy: no
  

- name: Move WordPress install files
  copy:
    src: /tmp/wordpress/
    dest: /srv/www/demosite.local
    remote_src: yes
    owner: www-data
    group: www-data
  when: ansible_facts['hostname'] == "web1"  
  ignore_errors: true

- name: Copy wp-config.php
  copy:
    src: /srv/www/demosite.local/wp-config-sample.php
    dest: /srv/www/demosite.local/wp-config.php
    remote_src: yes
    owner: www-data
    group: www-data
  when: ansible_facts['hostname'] == "web1" 
- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/demosite.local/wp-config.php"
    regexp: "database_name_here"
    line: "define( 'DB_NAME', 'wordpress' );"
  when: ansible_facts['hostname'] == "web1" 
- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/demosite.local/wp-config.php"
    regexp: "username_here"
    line: "define( 'DB_USER', 'wordpress' );"
  when: ansible_facts['hostname'] == "web1" 
- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/demosite.local/wp-config.php"
    regexp: "password_here"
    line: "define( 'DB_PASSWORD', 'Otus123' );"
  when: ansible_facts['hostname'] == "web1" 
- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/demosite.local/wp-config.php"
    regexp: "localhost"
    line: "define( 'DB_HOST', '192.168.56.100' );"
  when: ansible_facts['hostname'] == "web1" 